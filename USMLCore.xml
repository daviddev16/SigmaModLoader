<?xml version="1.0"?>
<doc>
    <assembly>
        <name>USMLCore</name>
    </assembly>
    <members>
        <member name="T:USML.DocumentedAttribute">
            <summary>
            This attribute helps to indentify the documented classes/structures.
            </summary>
        </member>
        <member name="M:USML.DocumentedAttribute.#ctor(System.Boolean)">
            <param name="done">if this class/struct is well-documented or complete</param>
        </member>
        <member name="M:USML.DocumentedAttribute.IsDone">
            <summary>
            returns if it's documented.
            </summary>
        </member>
        <member name="T:USML.NullableAttribute">
            <summary>
            This attribute can be added in methods that can returns a null reference.
            </summary>
        </member>
        <member name="T:USML.IValidator">
             <summary>
             Validator provides a <see cref="M:USML.IValidator.Validate"/> method that can be used for
             <br>validate some condition or verification</br>
             </summary>
            
        </member>
        <member name="M:USML.IValidator.Validate">
             <summary>
             Validate checks all needed conditions to make the inherit class works
             </summary>
            
        </member>
        <member name="T:USML.Objects">
            <summary>
            This class consists of static utility methods for operating on objects.
            </summary>
        </member>
        <member name="M:USML.Objects.RequireNotNull``1(``0@,System.String,System.Exception)">
            <summary>
            This method check if the passed variable is null.
            </summary>
            <param name="obj">The object that will be checked</param>
            <param name="inner">The inner exception</param>
            <param name="message">The message of the Exception</param>
            
            <exception cref="T:System.NullReferenceException">If the actual object is null</exception> 
            <returns>The passed object</returns>
            
        </member>
        <member name="M:USML.Objects.RequireNotNull``1(``0)">
            <summary>
            This method check if the passed variable is null.
            </summary>
            <param name="obj">The object that will be checked</param>
            
            <exception cref="T:System.NullReferenceException">If the actual object is null</exception> 
            <returns>The passed object</returns>
            
        </member>
        <member name="M:USML.Objects.RequireNotNull``1(``0@,System.String)">
            <summary>
            This method check if the passed variable is null.
            </summary>
            <param name="obj">The object that will be checked</param>
            <param name="message">The message of the Exception</param>
            
            <exception cref="T:System.NullReferenceException">If the actual object is null</exception> 
            <returns>The passed object</returns>
            
        </member>
        <member name="M:USML.Objects.GetValue(System.Json.JsonObject@,System.String)">
             <summary>
             This method returns the JsonValue of the respective key
             <br>Warning: this method can return a null object</br>
             </summary>
            
             <returns>The JsonValue</returns>
             <param name="jObject">The reference of the JsonObject</param>
             <param name="key">The key</param>
             
        </member>
        <member name="M:USML.Objects.GetString(System.Json.JsonObject@,System.String)">
             <summary>
             This method returns the String of the respective key
             <br>Warning: this method can return a null object</br>
             </summary>
            
             <returns>The JsonValue</returns>
             <param name="jObject">The reference of the JsonObject</param>
             <param name="key">The key</param>
             
        </member>
        <member name="M:USML.Objects.Get(System.Json.JsonObject@,System.String)">
             <summary>
             This method returns the Object of the respective key
             <br>Warning: this method can return a null object</br>
             </summary>
            
             <returns>The JsonValue</returns>
             <param name="jObject">The reference of the JsonObject</param>
             <param name="key">The key</param>
             
        </member>
        <member name="T:USML.Tracer">
            <summary>
            Provides method for the USML logging.
            <br>use all static methods</br>
            </summary>
        </member>
        <member name="P:USML.Tracer.LogBuilder">
            <summary>
            The entire log String.
            </summary>
        </member>
        <member name="P:USML.Tracer.Holder">
            <summary>
            The current object using the Tracer
            <br>Can be set with <see cref="M:USML.Tracer.Here(System.Object@)"/> function.</br>
            </summary>
        </member>
        <member name="P:USML.Tracer.FailCount">
            <summary>
            this variable increases every time <see cref="M:USML.Tracer.Fail(System.String)"/> is called
            </summary>
        </member>
        <member name="M:USML.Tracer.Here(System.Object@)">
            <summary>
            Set the Tracer holder object
            </summary>
            <param name="obj">the actual object using Tracer</param>
        </member>
        <member name="M:USML.Tracer.Fail(System.String)">
            <summary>
            Print a fail message.
            </summary>
            <param name="message">the message that will be sent</param>
        </member>
        <member name="M:USML.Tracer.Throw(System.String,System.String)">
            <summary>
            Print an Exception message.
            </summary>
            <param name="message">the message that will be sent</param>
            <param name="throwMessage">the message from the exception</param>
        </member>
        <member name="M:USML.Tracer.Log(System.String)">
            <summary>
            Print a common log message.
            </summary>
            <param name="message">the message that will be sent</param>
        </member>
        <member name="M:USML.Tracer.Fatal(System.String)">
            <summary>
            Print a critical message.
            </summary>
            <param name="throwMessage">the message that will be sent</param>
        </member>
        <member name="M:USML.Tracer.Warning(System.String)">
            <summary>
            Print a warning message.
            </summary>
            <param name="message">the message that will be sent</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:USML.Tracer.AddLogSeparator" -->
        <member name="M:USML.Tracer.Exception(System.Exception)">
            <summary>
            Print a full exception message with the stacktrace include
            </summary>
            <param name="e">The thrown exception</param>
        </member>
        <member name="M:USML.Tracer.GetSingleTrace">
            <summary>
            The single instance of the Tracer
            </summary>
        </member>
        <member name="M:USML.Tracer.HasFailed">
            <summary>
            if the Tracer registered any fail.
            </summary>
            <returns>true if the <see cref="P:USML.Tracer.FailCount"/> is greater than 0</returns>
        </member>
        <member name="M:USML.Tracer.ToString">
            <summary>
            gives the entire string of the logging.
            </summary>
        </member>
        <member name="T:USML.USMLDefaults">
            <summary>
            All defaults labels/strings to be used by the USML application.
            </summary>
            
        </member>
    </members>
</doc>
